<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.16  |
    |              on 2025-06-22 09:38:12              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
 namespace DagaSmart\BizAdmin\Middleware; use Illuminate\Routing\Pipeline; use Illuminate\Support\Collection; use Illuminate\Support\Str; class EnsureFrontendRequestsAreStateful { public function handle($CDBRf, $fWtgK) { $this->configureSecureCookieSessions(); return (new Pipeline(app()))->send($CDBRf)->through(static::fromFrontend($CDBRf) ? [function ($CDBRf, $fWtgK) { $CDBRf->attributes->set("\163\x61\156\143\x74\x75\155", true); return $fWtgK($CDBRf); }, config("\163\141\156\143\164\165\x6d\56\155\x69\144\x64\x6c\x65\167\x61\x72\145\x2e\x65\x6e\x63\x72\x79\160\164\x5f\x63\x6f\157\153\151\145\x73", \Illuminate\Cookie\Middleware\EncryptCookies::class), \Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse::class, \Illuminate\Session\Middleware\StartSession::class] : [])->then(function ($CDBRf) use($fWtgK) { return $fWtgK($CDBRf); }); } protected function configureSecureCookieSessions() { config(["\x73\x65\x73\163\x69\x6f\156\56\150\x74\164\x70\x5f\157\x6e\154\x79" => true, "\163\145\163\x73\151\x6f\156\56\163\x61\x6d\145\x5f\163\x69\164\145" => "\154\x61\170"]); } public static function fromFrontend($CDBRf) { goto brmsu; LbXAw: $IL5UZ = Str::replaceFirst("\x68\164\x74\x70\163\72\57\57", '', $IL5UZ); goto UgGeZ; ceY8T: return false; goto kR2jJ; UgGeZ: $IL5UZ = Str::replaceFirst("\x68\164\x74\160\72\57\57", '', $IL5UZ); goto PZykC; l0JtK: if (!is_null($IL5UZ)) { goto m21uR; } goto ceY8T; brmsu: $IL5UZ = $CDBRf->headers->get("\x72\145\x66\x65\162\x65\162") ?: $CDBRf->headers->get("\157\x72\x69\147\151\x6e"); goto l0JtK; kR2jJ: m21uR: goto LbXAw; MD0I4: return Str::is(Collection::make($aAhuM)->map(fn($gzTPE) => trim($gzTPE) . "\57\x2a")->all(), $IL5UZ); goto uGICX; Pyj0w: $aAhuM = array_filter(config("\163\x61\156\143\x74\165\x6d\x2e\163\164\x61\x74\x65\x66\x75\154", [])); goto MD0I4; PZykC: $IL5UZ = Str::endsWith($IL5UZ, "\x2f") ? $IL5UZ : "{$IL5UZ}\x2f"; goto Pyj0w; uGICX: } }
