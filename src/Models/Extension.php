<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.16  |
    |              on 2025-06-22 09:38:12              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
 namespace DagaSmart\BizAdmin\Models; use DagaSmart\BizAdmin\Admin; class Extension extends BaseModel { const CACHE_KEY = "\x61\144\155\151\156\x5f\145\x78\x74\145\x6e\163\151\157\x6e\163"; protected $fillable = ["\156\x61\155\x65", "\143\157\144\145", "\x69\x73\137\x65\x6e\x61\142\154\145\x64", "\157\160\x74\x69\157\156\x73", "\x6d\157\x64\x75\154\x65", "\155\x65\x72\137\151\144"]; protected $casts = ["\x6f\x70\164\x69\x6f\156\x73" => "\152\163\x6f\x6e"]; protected $table = "\x61\x64\155\x69\x6e\x5f\145\170\164\x65\156\163\151\x6f\156\163"; protected static function booted() { goto PEuIw; gFSX3: static::updated($R5JM8); goto Jgk3h; PEuIw: $R5JM8 = function () { cache()->forget(self::CACHE_KEY); }; goto rvjXk; Jgk3h: static::deleted($R5JM8); goto yGLbZ; rvjXk: static::created($R5JM8); goto gFSX3; yGLbZ: } public static function keyByNameList() { return cache()->rememberForever(self::CACHE_KEY, fn() => self::all()->keyBy(function ($dr0sI) { goto ML6sU; QZNOm: $nENN9 .= sprintf("\55\x25\x73", $dr0sI["\x6d\x65\162\x5f\151\144"]); goto QKbnB; fnR8M: if (is_null($dr0sI["\155\x6f\x64\x75\154\x65"])) { goto czPZR; } goto dt_kn; mo1wX: czPZR: goto JfPqO; ML6sU: $nENN9 = sprintf("\45\163", $dr0sI["\x63\157\x64\x65"]); goto fnR8M; JfPqO: if (is_null($dr0sI["\x6d\x65\162\137\x69\144"])) { goto C6nPp; } goto QZNOm; knGbC: return $nENN9; goto KRcnw; dt_kn: $nENN9 .= sprintf("\x2d\45\163", $dr0sI["\x6d\157\144\x75\x6c\x65"]); goto mo1wX; QKbnB: C6nPp: goto knGbC; KRcnw: })); } public static function isEnabled($jFQ2o, $QOmn1 = null) : ?bool { return (bool) static::query()->where("\x63\157\144\145", $jFQ2o)->where("\155\157\144\x75\154\x65", Admin::currentModule(true))->where("\155\145\162\137\151\144", $QOmn1)->value("\x69\x73\x5f\x65\x6e\x61\x62\x6c\145\x64"); } public static function isUsed($jFQ2o, $QOmn1 = null) : ?bool { return static::query()->where("\x63\157\144\145", $jFQ2o)->where("\x6d\157\144\x75\154\x65", Admin::currentModule(true))->where("\x6d\x65\162\137\151\144", $QOmn1)->exists(); } }
