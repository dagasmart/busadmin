<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.16  |
    |              on 2025-06-22 09:38:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
 namespace DagaSmart\BizAdmin\Services; use Illuminate\Support\Arr; use DagaSmart\BizAdmin\Admin; use Illuminate\Support\Facades\DB; use DagaSmart\BizAdmin\Models\AdminMenu; use Illuminate\Database\Eloquent\Builder; class AdminMenuService extends AdminService { public function __construct() { parent::__construct(); $this->modelName = Admin::adminMenuModel(); } public function getTree() { goto YRU81; PlDTP: return array2tree($q86RX); goto bQFLv; YRU81: $jPrZ3 = request("\164\151\x74\154\145"); goto m3XBY; m3XBY: $LW3iP = request("\x75\162\x6c"); goto QcWsm; QcWsm: $q86RX = $this->query()->when($jPrZ3, fn($uzIV4) => $uzIV4->where("\164\151\164\x6c\145", "\x6c\x69\153\145", "\45" . $jPrZ3 . "\45"))->when($LW3iP, fn($uzIV4) => $uzIV4->where("\x75\162\x6c", "\154\151\153\x65", "\45" . $LW3iP . "\45"))->orderBy("\143\x75\163\x74\157\155\x5f\157\x72\x64\145\x72")->orderBy("\151\x64")->get()->toArray(); goto PlDTP; bQFLv: } public function parentIsChild($H0Ru3, $twnIL) { goto AKbL3; YipVH: return true; goto RWITA; pzmKa: k7Y5k: goto p7pf5; wEJ0L: $IFXNI = $this->query()->find($twnIL); goto yUJcB; AKbL3: if (!($H0Ru3 == $twnIL)) { goto uHUFi; } goto YipVH; WyTqb: Z3A9n: goto ilVRP; ilVRP: $IFXNI = $IFXNI->parent; goto u5Cu3; RWITA: uHUFi: goto wEJ0L; uJ5qq: return true; goto WyTqb; p7pf5: return false; goto zoCQb; KkGVH: if (!($IFXNI->parent_id == $H0Ru3)) { goto Z3A9n; } goto uJ5qq; u5Cu3: if ($IFXNI) { goto HDPEY; } goto pzmKa; yUJcB: HDPEY: goto KkGVH; zoCQb: } public function update($Asg3e, $J6yf0) { goto i1i_8; fD5fc: if (!($twnIL != 0)) { goto j2Zpg; } goto PhXi7; svurh: j2Zpg: goto SwS5A; PhXi7: amis_abort_if($this->parentIsChild($Asg3e, $twnIL), admin_trans("\x61\x64\x6d\x69\156\x2e\x61\144\155\151\x6e\137\x6d\145\156\x75\x2e\160\x61\162\x65\156\x74\x5f\151\144\x5f\156\157\164\x5f\141\154\154\157\x77")); goto svurh; i1i_8: $kX4rm = $this->getTableColumns(); goto yH0NB; JZgRy: $J6yf0["\x69\x64"] = $Asg3e; goto ZDUhx; yH0NB: $twnIL = Arr::get($J6yf0, "\160\141\162\x65\x6e\164\x5f\x69\x64") ?: 0; goto fD5fc; ZDUhx: return $this->saveData($J6yf0, $kX4rm, $MWice); goto ukEqz; SwS5A: $MWice = $this->query()->whereKey($Asg3e)->first(); goto JZgRy; ukEqz: } public function store($J6yf0) { goto udh5I; LTJcs: $MWice = $this->getModel(); goto F6QXU; udh5I: $kX4rm = $this->getTableColumns(); goto LTJcs; F6QXU: return $this->saveData($J6yf0, $kX4rm, $MWice); goto HMpug; HMpug: } public function changeHomePage($rGB19 = 0) { $this->query()->when($rGB19, fn($uzIV4) => $uzIV4->where("\x69\x64", "\x3c\76", $rGB19))->update(["\x69\x73\x5f\x68\157\155\145" => 0]); } public function list() { return ["\x69\x74\x65\x6d\163" => $this->getTree()]; } protected function saveData($J6yf0, array $kX4rm, AdminMenu $MWice) { goto lOTVO; vNsIP: foreach ($J6yf0 as $RpIak => $nJGKm) { goto rluhM; M5EVb: $this->changeHomePage($MWice->getKey()); goto w95lb; dCekJ: hlY5c: goto JByi_; JByi_: $nJGKm = $RpIak == "\160\141\162\x65\156\164\x5f\x69\144" ? intval($nJGKm) : $nJGKm; goto Rxenl; itk7o: goto LSh1a; goto dCekJ; O6VlS: LSh1a: goto InRqq; g7WDO: if (!($RpIak == "\x69\x73\137\150\157\155\x65" && $nJGKm == 1)) { goto k7J7a; } goto M5EVb; rluhM: if (in_array($RpIak, $kX4rm)) { goto hlY5c; } goto itk7o; w95lb: k7J7a: goto O6VlS; Rxenl: $MWice->setAttribute($RpIak, $nJGKm); goto g7WDO; InRqq: } goto JTtMb; lOTVO: $prqSb = $this->query()->where("\165\162\x6c", data_get($J6yf0, "\x75\162\x6c"))->when(data_get($J6yf0, "\151\144"), fn($eIy1F) => $eIy1F->where("\151\x64", "\74\76", data_get($J6yf0, "\151\x64")))->exists(); goto nQehq; JTtMb: jf200: goto eq871; eq871: return $MWice->save(); goto Z0RuF; nQehq: admin_abort_if($prqSb, admin_trans("\141\144\x6d\151\156\x2e\x61\144\x6d\151\x6e\x5f\x6d\x65\x6e\165\56\165\x72\154\x5f\145\170\x69\x73\x74\x73")); goto vNsIP; Z0RuF: } public function reorder($PjGLY) { goto a0yew; RlxQ9: $PjGLY = json_decode("\x5b" . str_replace("\133", "\x2c\133", $PjGLY) . "\135"); goto x1qTS; UQHsJ: gF47e: goto UnFJu; v4WrR: $I6UWy = []; goto w9yxV; a0yew: if (!blank($PjGLY)) { goto WlU9O; } goto Fy5In; UnFJu: return DB::update($uj3DW . "\x20\145\x6c\163\x65\40\x63\165\x73\x74\157\x6d\137\x6f\x72\x64\x65\162\x20\145\156\144", $I6UWy); goto JQiNe; Ho8Ma: WlU9O: goto RlxQ9; ABKSU: $uj3DW = "\x75\x70\144\x61\x74\x65\x20" . $this->getModel()->getTable() . "\x20\163\x65\164\x20\x63\165\163\164\x6f\x6d\137\x6f\162\x64\145\x72\x20\x3d\x20\x63\141\163\145\x20\x69\x64\40"; goto v4WrR; Fy5In: return false; goto Ho8Ma; x1qTS: $q86RX = collect($this->refreshOrder($PjGLY))->transform(fn($Y9Rd5) => $Y9Rd5 * 10)->all(); goto ABKSU; w9yxV: foreach ($q86RX as $RpIak => $nJGKm) { goto Z7kv2; hNvap: $I6UWy[] = $nJGKm; goto vj3vp; Z7kv2: $I6UWy[] = $RpIak; goto hNvap; vj3vp: $uj3DW .= "\40\167\x68\145\156\x20\77\40\x74\x68\x65\156\40\77\x20"; goto Ym4zi; Ym4zi: MdBH_: goto W2e0D; W2e0D: } goto UQHsJ; JQiNe: } public function refreshOrder($q86RX) { goto TKeNa; WE0WQ: collect($q86RX)->filter(fn($Y9Rd5) => is_array($Y9Rd5))->each(function ($dr0sI) use(&$EFytN) { $EFytN = $this->refreshOrder($dr0sI) + $EFytN; }); goto KPvxf; KPvxf: return $EFytN; goto Ue57b; TKeNa: $EFytN = collect($q86RX)->filter(fn($Y9Rd5) => !is_array($Y9Rd5))->values()->flip()->toArray(); goto WE0WQ; Ue57b: } }
