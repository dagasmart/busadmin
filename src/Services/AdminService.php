<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.16  |
    |              on 2025-06-22 09:38:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
 namespace DagaSmart\BizAdmin\Services; use Illuminate\Support\Arr; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; use DagaSmart\BizAdmin\Renderers\Page; use Illuminate\Support\Facades\Route; use Illuminate\Support\Facades\Schema; use Illuminate\Database\Eloquent\Model; use DagaSmart\BizAdmin\Traits\ErrorTrait; use Illuminate\Database\Eloquent\Builder; use DagaSmart\BizAdmin\Renderers\TableColumn; abstract class AdminService { use ErrorTrait; protected $tableColumn; protected string $modelName; protected Request $request; public function __construct() { $this->request = request(); } public static function make() : static { return new static(); } public function setModelName($iqocA) { $this->modelName = $iqocA; } public function getModel() { return new $this->modelName(); } public function primaryKey() { return $this->getModel()->getKeyName(); } public function getTableColumns() { goto tyLSU; mcB06: try { $this->tableColumn = Schema::connection($this->getModel()->getConnectionName())->getColumnListing($this->getModel()->getTable()); } catch (\Throwable $FXDMR) { $this->tableColumn = []; } goto te0q1; T9Xk7: return $this->tableColumn; goto vWMQ2; te0q1: ar7gk: goto T9Xk7; tyLSU: if ($this->tableColumn) { goto ar7gk; } goto mcB06; vWMQ2: } public function hasColumn($RUa8Y) { goto lnSiJ; lnSiJ: $kX4rm = $this->getTableColumns(); goto Z9Wmz; EgiAq: return true; goto SnN9y; sEJ3q: return in_array($RUa8Y, $kX4rm); goto iV5Br; SnN9y: wcqwE: goto sEJ3q; Z9Wmz: if (!blank($kX4rm)) { goto wcqwE; } goto EgiAq; iV5Br: } public function query() { return $this->modelName::query(); } public function getDetail($H0Ru3) { goto XTNsw; aHeqL: $this->addRelations($uzIV4, "\x64\145\164\x61\151\x6c"); goto MTwFv; XTNsw: $uzIV4 = $this->query(); goto aHeqL; MTwFv: return $uzIV4->find($H0Ru3); goto PWovc; PWovc: } public function getEditData($H0Ru3) { goto jUsjf; WIBI4: $Myn9f = collect([$MWice->getCreatedAtColumn(), $MWice->getUpdatedAtColumn()])->filter(fn($dr0sI) => $dr0sI !== null)->toArray(); goto Q4BeK; jUsjf: $MWice = $this->getModel(); goto WIBI4; BQEAN: return $uzIV4->find($H0Ru3)->makeHidden($Myn9f); goto zWJuW; Yi5xk: $this->addRelations($uzIV4, "\x65\144\x69\x74"); goto BQEAN; Q4BeK: $uzIV4 = $this->query(); goto Yi5xk; zWJuW: } public function listQuery() { goto eM96S; OwTd5: $this->loadRelations($uzIV4); goto y7z0P; H1kp4: return $uzIV4; goto uQDfr; eM96S: $uzIV4 = $this->query(); goto kPkK5; y7z0P: $this->searchable($uzIV4); goto kB7Aa; kB7Aa: $this->addRelations($uzIV4); goto H1kp4; kPkK5: $this->sortable($uzIV4); goto OwTd5; uQDfr: } public function addRelations($uzIV4, string $rI4O7 = "\x6c\x69\163\x74") { } public function loadRelations($uzIV4) { goto wX4V1; NYm8M: $NX2Ym = method_exists($o9Z9P, "\154\x69\163\x74") ? $o9Z9P->list() : ''; goto GGzqu; qnUFN: return; goto d_Eti; XTchd: $ypKrC = []; goto YcMne; e5VSC: $uzIV4->with(array_unique($ypKrC)); goto cdDmt; YcMne: foreach ($kX4rm as $RUa8Y) { goto o9ygf; vNGqD: ite1H: goto rLo3l; GtcEO: $EsUlv = $RUa8Y->amisSchema["\156\141\155\145"]; goto rxDGC; rxDGC: if (!str_contains($EsUlv, "\56")) { goto ite1H; } goto I73Ae; NXsqQ: fTzYF: goto GtcEO; rLo3l: YRIW6: goto cbdIZ; X6nlQ: $ypKrC[] = implode("\56", $q86RX); goto vNGqD; tN711: goto YRIW6; goto NXsqQ; I73Ae: $q86RX = array_slice(explode("\56", $EsUlv), 0, -1); goto PrAVA; PrAVA: try { goto wvMe6; n55av: foreach ($q86RX as $dr0sI) { $MurcX = app($MurcX)->{$dr0sI}()->getModel()::class; dFoOx: } goto bRuGA; wvMe6: $MurcX = $this->modelName; goto n55av; bRuGA: mH8lv: goto ekf9R; ekf9R: } catch (\Throwable $FXDMR) { goto YRIW6; } goto X6nlQ; o9ygf: if ($RUa8Y instanceof TableColumn) { goto fTzYF; } goto tN711; cbdIZ: } goto WEZO4; d_Eti: kv_bo: goto OFb2J; OFb2J: $kX4rm = $NX2Ym->toArray()["\142\157\x64\171"]->amisSchema["\x63\157\154\x75\x6d\156\163"] ?? []; goto XTchd; wX4V1: $o9Z9P = Route::getCurrentRoute()->getController(); goto NYm8M; GGzqu: if ($NX2Ym instanceof Page) { goto kv_bo; } goto qnUFN; WEZO4: L75i5: goto e5VSC; cdDmt: } public function sortable($uzIV4) { goto z87eW; Bjdza: RyMLX: goto vXWaE; kBogD: rbbDB: goto u5C6T; GegPA: goto rbbDB; goto Bjdza; z87eW: if (request()->orderBy && request()->orderDir) { goto RyMLX; } goto HOdIY; vXWaE: $uzIV4->orderBy(request()->orderBy, request()->orderDir ?? "\x61\x73\x63"); goto kBogD; HOdIY: $uzIV4->orderByDesc($this->sortColumn()); goto GegPA; u5C6T: } public function searchable($uzIV4) { collect(array_keys(request()->query()))->intersect($this->getTableColumns())->map(function ($EsUlv) use($uzIV4) { $uzIV4->when(filled(request($EsUlv)), function ($uzIV4) use($EsUlv) { goto TD89t; Q8_7Z: YZbFK: goto zZ10W; XI3w6: $QoAMV = Schema::getColumnType($this->getModel()->getTable(), $EsUlv); goto L5aKt; PZOfb: WcA1n: goto bzMcS; bzMcS: $uzIV4->where($EsUlv, request($EsUlv)); goto DUOUm; L5aKt: if ($QoAMV == "\142\x6f\157\154" || $QoAMV == "\x62\157\x6f\154\145\x61\x6e") { goto pyV2q; } goto e9hHm; CjS1B: $uzIV4->where($EsUlv, request($EsUlv)); goto a2wE3; TD89t: if (mb_strpos(request($EsUlv), "\54")) { goto Kdwcr; } goto XI3w6; DUOUm: w0JjJ: goto ErE40; a2wE3: goto w0JjJ; goto PZOfb; ErE40: goto YZbFK; goto r3TB9; r3TB9: Kdwcr: goto Frn3G; jBIM8: pyV2q: goto CjS1B; e9hHm: if ($QoAMV == "\151\156\x74" || $QoAMV == "\x69\156\164\x65\147\145\x72") { goto WcA1n; } goto CUzSD; Frn3G: $uzIV4->whereIn($EsUlv, explode("\x2c", request($EsUlv))); goto Q8_7Z; CUzSD: $uzIV4->where($EsUlv, "\154\x69\153\x65", "\x25" . request($EsUlv) . "\x25"); goto jV5eo; jV5eo: goto w0JjJ; goto jBIM8; zZ10W: }); }); } public function sortColumn() { goto EuJOD; eYTRV: if (!($this->getModel()->timestamps && $this->hasColumn($B37zL))) { goto LjsFd; } goto ioszT; ioszT: return $B37zL; goto U3Sa5; kzv1G: return $this->getModel()->getKeyName(); goto FWBp1; yq3ve: if (!$this->hasColumn($this->getModel()->getKeyName())) { goto KMMRR; } goto kzv1G; FWBp1: KMMRR: goto Pxtjf; EuJOD: $B37zL = $this->getModel()->getUpdatedAtColumn(); goto eYTRV; Pxtjf: return Arr::first($this->getTableColumns()); goto K7RGW; U3Sa5: LjsFd: goto yq3ve; K7RGW: } public function formatRows(array $X6_nw) { return $X6_nw; } public function list() { goto NSz35; PjJye: $cqzRC = $q86RX->total(); goto SEKmR; PARf_: $WMICj = $this->formatRows($q86RX->items()); goto PjJye; NSz35: $uzIV4 = $this->listQuery(); goto pqiy8; SEKmR: return compact("\151\x74\x65\155\163", "\x74\157\164\x61\154"); goto ybiR_; pqiy8: $q86RX = $uzIV4->paginate(request()->input("\x70\145\162\120\141\147\x65", 20)); goto PARf_; ybiR_: } public function update($Asg3e, $J6yf0) { goto Txvvb; ES0Xz: try { goto CW1Yu; pm6Vl: $this->saved($MWice, true); goto z54M7; ejkSY: foreach ($J6yf0 as $RpIak => $nJGKm) { goto EQEgm; i5Hrx: $MWice->setAttribute($RpIak, $nJGKm); goto ZZxkY; EzFbH: goto mVL5t; goto GjCR9; ZZxkY: mVL5t: goto qrX4m; GjCR9: I2IvV: goto i5Hrx; EQEgm: if ($this->hasColumn($RpIak)) { goto I2IvV; } goto EzFbH; qrX4m: } goto vUx3J; CW1Yu: $this->saving($J6yf0, $Asg3e); goto MMZdv; vyuxI: if (!$EFytN) { goto vHB0N; } goto pm6Vl; MMZdv: $MWice = $this->query()->whereKey($Asg3e)->first(); goto ejkSY; i8wqD: DB::commit(); goto HKxVV; vUx3J: gwN0N: goto T8Il0; T8Il0: $EFytN = $MWice->save(); goto vyuxI; z54M7: vHB0N: goto i8wqD; HKxVV: } catch (\Throwable $FXDMR) { DB::rollBack(); admin_abort($FXDMR->getMessage()); } goto YziLo; YziLo: return $EFytN; goto CeDi3; Txvvb: DB::beginTransaction(); goto ES0Xz; CeDi3: } public function store($J6yf0) { goto hq1NA; Jyc3B: return $EFytN; goto Mx1T0; FTe4N: try { goto X8EPH; X8EPH: $this->saving($J6yf0); goto mlXM4; kDx4j: Wyjzk: goto LBFoi; mlXM4: $MWice = $this->getModel(); goto Y_z8C; XJfB0: $this->saved($MWice); goto kDx4j; cVa3u: if (!$EFytN) { goto Wyjzk; } goto XJfB0; NXpD8: J2yob: goto ze3w4; ze3w4: $EFytN = $MWice->save(); goto cVa3u; Y_z8C: foreach ($J6yf0 as $RpIak => $nJGKm) { goto FJReA; EBdCo: $MWice->setAttribute($RpIak, $nJGKm); goto q3hjF; VM3cW: xxtdL: goto EBdCo; FJReA: if ($this->hasColumn($RpIak)) { goto xxtdL; } goto JJjB0; JJjB0: goto gED1d; goto VM3cW; q3hjF: gED1d: goto eFrA_; eFrA_: } goto NXpD8; LBFoi: DB::commit(); goto Vs5E1; Vs5E1: } catch (\Throwable $FXDMR) { DB::rollBack(); admin_abort($FXDMR->getMessage()); } goto Jyc3B; hq1NA: DB::beginTransaction(); goto FTe4N; Mx1T0: } public function delete(string $PjGLY) { goto yMZAc; yMZAc: DB::beginTransaction(); goto WYwxY; Yl2GS: return $EFytN; goto PZoUb; WYwxY: try { goto gMtCX; zf50X: l1En6: goto OGfaM; OGfaM: DB::commit(); goto etPee; gMtCX: $EFytN = $this->query()->whereIn($this->primaryKey(), explode("\54", $PjGLY))->delete(); goto dxEUI; dxEUI: if (!$EFytN) { goto l1En6; } goto q1kKS; q1kKS: $this->deleted($PjGLY); goto zf50X; etPee: } catch (\Throwable $FXDMR) { DB::rollBack(); admin_abort($FXDMR->getMessage()); } goto Yl2GS; PZoUb: } public function quickEdit($J6yf0) { goto QWBWw; Es_KR: try { goto E2m_H; WmZSh: joxr_: goto ANplt; E2m_H: foreach ($OmYu1 as $dr0sI) { $this->update(Arr::pull($dr0sI, $this->primaryKey()), $dr0sI); uh3jR: } goto WmZSh; ANplt: DB::commit(); goto McxS7; McxS7: } catch (\Throwable $FXDMR) { DB::rollBack(); admin_abort($FXDMR->getMessage()); } goto lbNOK; QWBWw: $OmYu1 = data_get($J6yf0, "\162\x6f\167\x73\x44\151\146\146", []); goto t2B48; lbNOK: return true; goto lvyTQ; t2B48: DB::beginTransaction(); goto Es_KR; lvyTQ: } public function quickEditItem($J6yf0) { return $this->update(Arr::pull($J6yf0, $this->primaryKey()), $J6yf0); } public function saving(&$J6yf0, $Asg3e = '') { } public function saved($MWice, $NHFJY = false) { } public function deleted($PjGLY) { } public function switchOption() { return $this->getModel()->switchOption(); } public function authOption() { return $this->getModel()->authOption(); } public function payOption() { return $this->getModel()->payOption(); } public function stateOption() { return $this->getModel()->stateOption(); } public function auditOption() { return $this->getModel()->auditOption(); } public function auditMapping() { return $this->getModel()->auditMapping(); } public function statusMapping() { return $this->getModel()->statusMapping(); } public function moduleOption() { return $this->getModel()->moduleOption(); } public function saveModules($H0Ru3, $qA4Xw = null, $m6dlr = null) { admin_abort_if(!$H0Ru3, "\x7b\151\x64\x7d\345\x8f\x82\346\225\xb0\344\xb8\x8d\350\203\275\344\xb8\xba\xe7\xa9\272"); return $this->getModel()->saveModules($H0Ru3, $qA4Xw, $m6dlr); } public function getGroups() { return $this->getModel()->getGroups(); } }
