<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.16  |
    |              on 2025-06-22 09:38:16              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
 namespace DagaSmart\BizAdmin\Services; use Illuminate\Support\Arr; use DagaSmart\BizAdmin\Admin; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Cache; use DagaSmart\BizAdmin\Models\AdminSetting; class AdminSettingService extends AdminService { protected string $modelName = AdminSetting::class; protected string $cacheKeyPrefix = "\141\160\x70\137\163\145\164\164\151\156\x67\137"; public function set($ZAY66, $IyStN = null) { try { goto BpJhz; td1Um: $IWREJ = $this->getModel()->where("\x6d\x6f\144\x75\x6c\145", Admin::currentModule(true))->when(!is_null($C38kp), function ($uzIV4) use($C38kp) { $uzIV4->where("\155\x65\x72\x5f\151\x64", $C38kp); })->firstOrNew(["\x6b\x65\171" => $ZAY66]); goto dIm6u; h01EO: $Ilb2D = Admin::currentModule(true); goto td1Um; pIa93: $IWREJ->save(); goto WQXUL; cB0Q5: $this->clearCache($ZAY66); goto pIa93; BpJhz: $C38kp = Admin::merId(); goto h01EO; dIm6u: $IWREJ->values = $IyStN; goto cB0Q5; WQXUL: } catch (\Exception $FXDMR) { amis_abort($FXDMR->getMessage()); } return true; } public function setMany(array $J6yf0) { goto qfoPY; qfoPY: DB::beginTransaction(); goto J0cjv; KyTfD: return true; goto Vj8Xt; J0cjv: try { goto Mco9U; Mco9U: foreach ($J6yf0 as $ZAY66 => $IyStN) { goto lk0S1; falqo: nfly1: goto Fgntg; W7jW9: tkgoL: goto falqo; lk0S1: if ($this->set($ZAY66, $IyStN)) { goto tkgoL; } goto YZVtp; YZVtp: throw new \Exception($this->getError()); goto W7jW9; Fgntg: } goto keKcb; A2a3i: DB::commit(); goto qpYLg; keKcb: aWuaM: goto A2a3i; qpYLg: } catch (\Exception $FXDMR) { DB::rollBack(); amis_abort($FXDMR->getMessage()); } goto KyTfD; Vj8Xt: } public function adminSetMany(array $J6yf0) { goto Wn3e1; Wn3e1: $LWUUl = admin_trans("\141\x64\155\x69\x6e\x2e\x73\x61\166\x65"); goto qSOef; qSOef: if (!$this->setMany($J6yf0)) { goto vBy_i; } goto Y1JYJ; Y1JYJ: return Admin::response()->successMessage($LWUUl . admin_trans("\141\144\155\151\156\56\x73\x75\x63\143\x65\163\163\x66\x75\x6c\x6c\171")); goto tjfn5; tjfn5: vBy_i: goto OO8S7; OO8S7: return Admin::response()->fail($LWUUl . admin_trans("\141\x64\155\151\156\x2e\146\x61\151\154\x65\x64"), $this->getError()); goto Mhkpd; Mhkpd: } public function all() { goto FmNnv; JcWrK: $Ilb2D = Admin::currentModule(true); goto XvPGJ; FmNnv: $C38kp = Admin::merId(); goto JcWrK; XvPGJ: return $this->getModel()->query()->pluck("\x76\141\154\165\145\x73", "\153\x65\171")->toArray(); goto bW_t_; bW_t_: } public function get(string $ZAY66, mixed $a30rh = null, bool $ScDzC = false) { goto u0coh; lwJdj: $IyStN = Cache::rememberForever($this->getCacheKey($ZAY66), function () use($ZAY66) { return $this->getModel()->where("\153\x65\171", $ZAY66)->value("\166\x61\x6c\x75\x65\163"); }); goto GHp8d; rXwqc: return $this->getModel()->where("\153\145\x79", $ZAY66)->value("\x76\141\154\x75\x65\x73") ?? $a30rh; goto OWukn; u0coh: if (!$ScDzC) { goto w5r2A; } goto rXwqc; OWukn: w5r2A: goto lwJdj; GHp8d: return $IyStN ?? $a30rh; goto QXqY6; QXqY6: } public function getByModule(string $ZAY66, mixed $a30rh = null, bool $ScDzC = false) { goto Dxmb0; qvA7b: gz6yi: goto SBVJH; KQC9R: $LWUUl = ''; goto IZnBQ; SBVJH: return $this->get($LWUUl . $ZAY66, $a30rh, $ScDzC); goto o9Snh; Dxmb0: $Ilb2D = Admin::currentModule(true); goto KQC9R; IZnBQ: if (!$Ilb2D) { goto gz6yi; } goto bf3Qm; bf3Qm: $LWUUl .= $Ilb2D . "\x5f"; goto qvA7b; o9Snh: } public function arrayGet(string $ZAY66, string $ZkOaA, $a30rh = null) { goto YKGI_; cP7rZ: if (!is_array($IyStN)) { goto LBCMw; } goto Pmx36; Pmx36: return Arr::get($IyStN, $ZkOaA, $a30rh); goto g0A6G; YKGI_: $IyStN = $this->get($ZAY66); goto cP7rZ; g0A6G: LBCMw: goto nT1iZ; nT1iZ: return $a30rh; goto SUqOR; SUqOR: } public function del(string $ZAY66) { goto zps5t; k7MU6: QjThY: goto MCNhQ; zps5t: if (!$this->getModel()->where("\153\145\171", $ZAY66)->delete()) { goto QjThY; } goto MEjYI; v8qVs: return true; goto k7MU6; MCNhQ: return false; goto DScdf; MEjYI: $this->clearCache($ZAY66); goto v8qVs; DScdf: } public function clearCache($ZAY66) { Cache::forget($this->getCacheKey($ZAY66)); } public function getCacheKey($ZAY66) { $QOmn1 = Admin::merId(); return $this->cacheKeyPrefix . $ZAY66 . $QOmn1; } }
